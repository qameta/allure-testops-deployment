---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "allure-testops.gateway.fullname" . }}
  labels:
    app: {{ template "allure-testops.gateway.fullname" . }}
    version: v1
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.gateway.replicaCount }}
  strategy:
{{ toYaml .Values.strategy | indent 4 }}
  selector:
    matchLabels:
      app: {{ template "allure-testops.gateway.fullname" . }}
      version: v1
  template:
    metadata:
      labels:
        app: {{ template "allure-testops.gateway.fullname" . }}
        version: v1
{{- if .Values.gateway.annotations }}
      annotations:
{{- range $key, $value := .Values.gateway.annotations }}
        {{ $key }}: {{ $value | quote }}
{{- end }}
{{- end }}
    spec:
{{- if .Values.rbac.enabled }}
      serviceAccountName: {{ .Values.rbac.serviceAccountName }}
{{- end }}
      imagePullSecrets:
        - name: {{ .Values.registry.imagePullSecret }}
      tolerations:
{{ toYaml .Values.gateway.tolerations | indent 8 }}
{{- if .Values.gateway.affinity }}
      affinity:
{{ toYaml .Values.gateway.affinity | indent 8 }}
{{- end }}
{{- if .Values.gateway.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.gateway.nodeSelector | indent 8 }}
{{- end }}
      containers:
        - name: {{ template "allure-testops.gateway.fullname" . }}
          image: "{{ template "getImageRegistry" . }}{{ .Values.gateway.image }}:{{ .Values.version | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.registry.pullPolicy }}
{{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
{{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.gateway.service.port }}
          env:
{{- if not .Values.allure.manualConfig }}
{{- $secret_name := include "allure-testops.secret.name" . }}
            - name: SERVER_PORT
              value: "{{ .Values.gateway.service.port }}"
{{- include "renderCommonEnvs" . | indent 10 }}
            - name: JAVA_TOOL_OPTIONS
              value: {{ template "renderJavaOpts" .Values.gateway.resources.requests.memory }}
{{- if .Values.redis.sentinel.enabled }}
            - name: SPRING_REDIS_SENTINEL_NODES
              value: "{{ .Values.redis.sentinel.nodes }}"
            - name: SPRING_REDIS_SENTINEL_MASTER
              value: "{{ .Values.redis.sentinel.masterSet }}"
            - name: SPRING_REDIS_SENTINEL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $secret_name }}
                  key: "redisPass"
{{- else }}
            - name: SPRING_REDIS_HOST
              value: "{{ template "allure-testops.redis.fullname" . }}"
            - name: SPRING_REDIS_PORT
              value: "{{ .Values.redis.port }}"
            - name: SPRING_REDIS_DATABASE
              value: "{{ .Values.redis.database }}"
            - name: SPRING_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $secret_name }}
                  key: "redisPass"
{{- end }}
            - name: {{ .Values.build }}_JWT_ACCESS_TOKEN_VALIDITY_SECONDS
              value: "{{ .Values.allure.sessionLifespan }}"
            - name: {{ .Values.build }}_SECURE
              value: "{{ .Values.network.tls.enabled }}"
            - name: SPRING_SESSION_STORE_TYPE
              value: "REDIS"
{{- if .Values.allure.auth.oidc.enabled }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENTNAME
              value: {{ .Values.allure.auth.oidc.client.name }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_REDIRECTURI
              value: {{ .Values.allure.auth.oidc.redirectURI }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_SCOPE
              value: {{ .Values.allure.auth.oidc.scope }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUERURI
              value: {{ .Values.allure.auth.oidc.issuerURI }}
{{- if .Values.allure.auth.oidc.authMethod }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENTAUTHENTICATIONMETHOD
              value: {{ .Values.allure.auth.oidc.authMethod }}
{{- end }}
{{- if .Values.allure.auth.oidc.authURI }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_AUTHORIZATIONURI
              value: {{ .Values.allure.auth.oidc.authURI }}
{{- end }}
{{- if .Values.allure.auth.oidc.tokenURI }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_TOKENURI
              value: {{ .Values.allure.auth.oidc.tokenURI }}
{{- end }}
{{- if .Values.allure.auth.oidc.userInfoURI }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_USERINFOURI
              value: {{ .Values.allure.auth.oidc.userInfoURI }}
{{- end }}
{{- if .Values.allure.auth.oidc.jwksURI }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_JWKSETURI
              value: {{ .Values.allure.auth.oidc.jwksURI }}
{{- end }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_USERNAMEATTRIBUTE
              value: {{ .Values.allure.auth.oidc.userNameAttribute }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: {{ $secret_name }}
                  key: clientId
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ $secret_name }}
                  key: clientSecret
{{- end }}
{{- if .Values.allure.auth.saml.enabled }}
            - name: SPRING_SECURITY_SAML2_RELYINGPARTY_REGISTRATION_{{ .Values.allure.auth.saml.provider | upper }}_ACS_LOCATION
              value: "{{ .Values.allure.auth.saml.ACSLocation }}"
            - name: SPRING_SECURITY_SAML2_RELYINGPARTY_REGISTRATION_{{ .Values.allure.auth.saml.provider | upper }}_ENTITYID
              value: "{{ .Values.allure.auth.saml.entityId }}"
            - name: SPRING_SECURITY_SAML2_RELYINGPARTY_REGISTRATION_{{ .Values.allure.auth.saml.provider | upper }}_IDENTITYPROVIDER_METADATAURI
              value: "{{ .Values.allure.auth.saml.identityProviderMetadataUri }}"
{{- end }}
{{- if .Values.certificates.endpoints }}
            - name: TLS_ENDPOINTS
              value: "{{ .Values.certificates.endpoints }}"
{{- end }}
{{- end }}
{{- range $name, $value := .Values.gateway.env.open }}
            - name: {{ $name | quote }}
              value: {{ $value | quote }}
{{- end }}
{{- if .Values.gateway.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /management/health
              port: http
{{ toYaml .Values.gateway.probes.liveness.probe | indent 12 }}
          readinessProbe:
            httpGet:
              path: /management/health
              port: http
{{ toYaml .Values.gateway.probes.readiness.probe | indent 12 }}
{{- end }}
{{- with .Values.gateway.resources }}
          resources:
{{ toYaml . | indent 12 }}
{{- end }}
{{- if .Values.vault.enabled }}
          volumeMounts:
            - name: vault-creds
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: vault-creds
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ template "allure-testops.fullname" . }}
{{- end }}